/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/workspacesMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Workspaces. */
var Workspaces = /** @class */ (function () {
    /**
     * Create a Workspaces.
     * @param {DatabricksClientContext} client Reference to the service client.
     */
    function Workspaces(client) {
        this.client = client;
    }
    Workspaces.prototype.get = function (resourceGroupName, workspaceName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Deletes the workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    Workspaces.prototype.deleteMethod = function (resourceGroupName, workspaceName, options) {
        return this.beginDeleteMethod(resourceGroupName, workspaceName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Creates a new workspace.
     * @param parameters Parameters supplied to the create or update a workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesCreateOrUpdateResponse>
     */
    Workspaces.prototype.createOrUpdate = function (parameters, resourceGroupName, workspaceName, options) {
        return this.beginCreateOrUpdate(parameters, resourceGroupName, workspaceName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Updates a workspace.
     * @param parameters The update to the workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param [options] The optional parameters
     * @returns Promise<Models.WorkspacesUpdateResponse>
     */
    Workspaces.prototype.update = function (parameters, resourceGroupName, workspaceName, options) {
        return this.beginUpdate(parameters, resourceGroupName, workspaceName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    Workspaces.prototype.listByResourceGroup = function (resourceGroupName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            options: options
        }, listByResourceGroupOperationSpec, callback);
    };
    Workspaces.prototype.listBySubscription = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, listBySubscriptionOperationSpec, callback);
    };
    /**
     * Deletes the workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Workspaces.prototype.beginDeleteMethod = function (resourceGroupName, workspaceName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    /**
     * Creates a new workspace.
     * @param parameters Parameters supplied to the create or update a workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Workspaces.prototype.beginCreateOrUpdate = function (parameters, resourceGroupName, workspaceName, options) {
        return this.client.sendLRORequest({
            parameters: parameters,
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            options: options
        }, beginCreateOrUpdateOperationSpec, options);
    };
    /**
     * Updates a workspace.
     * @param parameters The update to the workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Workspaces.prototype.beginUpdate = function (parameters, resourceGroupName, workspaceName, options) {
        return this.client.sendLRORequest({
            parameters: parameters,
            resourceGroupName: resourceGroupName,
            workspaceName: workspaceName,
            options: options
        }, beginUpdateOperationSpec, options);
    };
    Workspaces.prototype.listByResourceGroupNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByResourceGroupNextOperationSpec, callback);
    };
    Workspaces.prototype.listBySubscriptionNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listBySubscriptionNextOperationSpec, callback);
    };
    return Workspaces;
}());
export { Workspaces };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Workspace
        },
        404: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listByResourceGroupOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.WorkspaceListResult
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listBySubscriptionOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Databricks/workspaces",
    urlParameters: [
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.WorkspaceListResult
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var beginCreateOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: tslib_1.__assign({}, Mappers.Workspace, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.Workspace
        },
        201: {
            bodyMapper: Mappers.Workspace
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var beginUpdateOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: tslib_1.__assign({}, Mappers.WorkspaceUpdate, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.Workspace
        },
        202: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listByResourceGroupNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.WorkspaceListResult
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listBySubscriptionNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.WorkspaceListResult
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=workspaces.js.map