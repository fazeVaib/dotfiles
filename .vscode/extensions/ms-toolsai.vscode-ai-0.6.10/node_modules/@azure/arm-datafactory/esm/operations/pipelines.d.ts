import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { DataFactoryManagementClientContext } from "../dataFactoryManagementClientContext";
/** Class representing a Pipelines. */
export declare class Pipelines {
    private readonly client;
    /**
     * Create a Pipelines.
     * @param {DataFactoryManagementClientContext} client Reference to the service client.
     */
    constructor(client: DataFactoryManagementClientContext);
    /**
     * Lists pipelines.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param [options] The optional parameters
     * @returns Promise<Models.PipelinesListByFactoryResponse>
     */
    listByFactory(resourceGroupName: string, factoryName: string, options?: msRest.RequestOptionsBase): Promise<Models.PipelinesListByFactoryResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param callback The callback
     */
    listByFactory(resourceGroupName: string, factoryName: string, callback: msRest.ServiceCallback<Models.PipelineListResponse>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByFactory(resourceGroupName: string, factoryName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PipelineListResponse>): void;
    /**
     * Creates or updates a pipeline.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param pipelineParameter Pipeline resource definition.
     * @param [options] The optional parameters
     * @returns Promise<Models.PipelinesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, pipelineName: string, pipelineParameter: Models.PipelineResource, options?: Models.PipelinesCreateOrUpdateOptionalParams): Promise<Models.PipelinesCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param pipelineParameter Pipeline resource definition.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, pipelineName: string, pipelineParameter: Models.PipelineResource, callback: msRest.ServiceCallback<Models.PipelineResource>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param pipelineParameter Pipeline resource definition.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, pipelineName: string, pipelineParameter: Models.PipelineResource, options: Models.PipelinesCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.PipelineResource>): void;
    /**
     * Gets a pipeline.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param [options] The optional parameters
     * @returns Promise<Models.PipelinesGetResponse>
     */
    get(resourceGroupName: string, factoryName: string, pipelineName: string, options?: Models.PipelinesGetOptionalParams): Promise<Models.PipelinesGetResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param callback The callback
     */
    get(resourceGroupName: string, factoryName: string, pipelineName: string, callback: msRest.ServiceCallback<Models.PipelineResource>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, factoryName: string, pipelineName: string, options: Models.PipelinesGetOptionalParams, callback: msRest.ServiceCallback<Models.PipelineResource>): void;
    /**
     * Deletes a pipeline.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, factoryName: string, pipelineName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, factoryName: string, pipelineName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, factoryName: string, pipelineName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Creates a run of a pipeline.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param [options] The optional parameters
     * @returns Promise<Models.PipelinesCreateRunResponse>
     */
    createRun(resourceGroupName: string, factoryName: string, pipelineName: string, options?: Models.PipelinesCreateRunOptionalParams): Promise<Models.PipelinesCreateRunResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param callback The callback
     */
    createRun(resourceGroupName: string, factoryName: string, pipelineName: string, callback: msRest.ServiceCallback<Models.CreateRunResponse>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param pipelineName The pipeline name.
     * @param options The optional parameters
     * @param callback The callback
     */
    createRun(resourceGroupName: string, factoryName: string, pipelineName: string, options: Models.PipelinesCreateRunOptionalParams, callback: msRest.ServiceCallback<Models.CreateRunResponse>): void;
    /**
     * Lists pipelines.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.PipelinesListByFactoryNextResponse>
     */
    listByFactoryNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PipelinesListByFactoryNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByFactoryNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PipelineListResponse>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByFactoryNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PipelineListResponse>): void;
}
//# sourceMappingURL=pipelines.d.ts.map