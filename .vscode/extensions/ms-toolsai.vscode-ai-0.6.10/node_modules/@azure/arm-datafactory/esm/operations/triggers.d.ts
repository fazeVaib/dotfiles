import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { DataFactoryManagementClientContext } from "../dataFactoryManagementClientContext";
/** Class representing a Triggers. */
export declare class Triggers {
    private readonly client;
    /**
     * Create a Triggers.
     * @param {DataFactoryManagementClientContext} client Reference to the service client.
     */
    constructor(client: DataFactoryManagementClientContext);
    /**
     * Lists triggers.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param [options] The optional parameters
     * @returns Promise<Models.TriggersListByFactoryResponse>
     */
    listByFactory(resourceGroupName: string, factoryName: string, options?: msRest.RequestOptionsBase): Promise<Models.TriggersListByFactoryResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param callback The callback
     */
    listByFactory(resourceGroupName: string, factoryName: string, callback: msRest.ServiceCallback<Models.TriggerListResponse>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByFactory(resourceGroupName: string, factoryName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TriggerListResponse>): void;
    /**
     * Creates or updates a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param trigger Trigger resource definition.
     * @param [options] The optional parameters
     * @returns Promise<Models.TriggersCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, triggerName: string, trigger: Models.TriggerResource, options?: Models.TriggersCreateOrUpdateOptionalParams): Promise<Models.TriggersCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param trigger Trigger resource definition.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, triggerName: string, trigger: Models.TriggerResource, callback: msRest.ServiceCallback<Models.TriggerResource>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param trigger Trigger resource definition.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, triggerName: string, trigger: Models.TriggerResource, options: Models.TriggersCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.TriggerResource>): void;
    /**
     * Gets a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param [options] The optional parameters
     * @returns Promise<Models.TriggersGetResponse>
     */
    get(resourceGroupName: string, factoryName: string, triggerName: string, options?: Models.TriggersGetOptionalParams): Promise<Models.TriggersGetResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param callback The callback
     */
    get(resourceGroupName: string, factoryName: string, triggerName: string, callback: msRest.ServiceCallback<Models.TriggerResource>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, factoryName: string, triggerName: string, options: Models.TriggersGetOptionalParams, callback: msRest.ServiceCallback<Models.TriggerResource>): void;
    /**
     * Deletes a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, factoryName: string, triggerName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, factoryName: string, triggerName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, factoryName: string, triggerName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Starts a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    start(resourceGroupName: string, factoryName: string, triggerName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Stops a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    stop(resourceGroupName: string, factoryName: string, triggerName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Starts a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginStart(resourceGroupName: string, factoryName: string, triggerName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Stops a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginStop(resourceGroupName: string, factoryName: string, triggerName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Lists triggers.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.TriggersListByFactoryNextResponse>
     */
    listByFactoryNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.TriggersListByFactoryNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByFactoryNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TriggerListResponse>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByFactoryNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TriggerListResponse>): void;
}
//# sourceMappingURL=triggers.d.ts.map