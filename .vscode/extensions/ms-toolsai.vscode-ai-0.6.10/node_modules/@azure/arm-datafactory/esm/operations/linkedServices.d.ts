import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { DataFactoryManagementClientContext } from "../dataFactoryManagementClientContext";
/** Class representing a LinkedServices. */
export declare class LinkedServices {
    private readonly client;
    /**
     * Create a LinkedServices.
     * @param {DataFactoryManagementClientContext} client Reference to the service client.
     */
    constructor(client: DataFactoryManagementClientContext);
    /**
     * Lists linked services.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param [options] The optional parameters
     * @returns Promise<Models.LinkedServicesListByFactoryResponse>
     */
    listByFactory(resourceGroupName: string, factoryName: string, options?: msRest.RequestOptionsBase): Promise<Models.LinkedServicesListByFactoryResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param callback The callback
     */
    listByFactory(resourceGroupName: string, factoryName: string, callback: msRest.ServiceCallback<Models.LinkedServiceListResponse>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByFactory(resourceGroupName: string, factoryName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LinkedServiceListResponse>): void;
    /**
     * Creates or updates a linked service.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param linkedService Linked service resource definition.
     * @param [options] The optional parameters
     * @returns Promise<Models.LinkedServicesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, linkedServiceName: string, linkedService: Models.LinkedServiceResource, options?: Models.LinkedServicesCreateOrUpdateOptionalParams): Promise<Models.LinkedServicesCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param linkedService Linked service resource definition.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, linkedServiceName: string, linkedService: Models.LinkedServiceResource, callback: msRest.ServiceCallback<Models.LinkedServiceResource>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param linkedService Linked service resource definition.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, factoryName: string, linkedServiceName: string, linkedService: Models.LinkedServiceResource, options: Models.LinkedServicesCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.LinkedServiceResource>): void;
    /**
     * Gets a linked service.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param [options] The optional parameters
     * @returns Promise<Models.LinkedServicesGetResponse>
     */
    get(resourceGroupName: string, factoryName: string, linkedServiceName: string, options?: Models.LinkedServicesGetOptionalParams): Promise<Models.LinkedServicesGetResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param callback The callback
     */
    get(resourceGroupName: string, factoryName: string, linkedServiceName: string, callback: msRest.ServiceCallback<Models.LinkedServiceResource>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, factoryName: string, linkedServiceName: string, options: Models.LinkedServicesGetOptionalParams, callback: msRest.ServiceCallback<Models.LinkedServiceResource>): void;
    /**
     * Deletes a linked service.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, factoryName: string, linkedServiceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, factoryName: string, linkedServiceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param linkedServiceName The linked service name.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, factoryName: string, linkedServiceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Lists linked services.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.LinkedServicesListByFactoryNextResponse>
     */
    listByFactoryNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.LinkedServicesListByFactoryNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByFactoryNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.LinkedServiceListResponse>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByFactoryNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LinkedServiceListResponse>): void;
}
//# sourceMappingURL=linkedServices.d.ts.map