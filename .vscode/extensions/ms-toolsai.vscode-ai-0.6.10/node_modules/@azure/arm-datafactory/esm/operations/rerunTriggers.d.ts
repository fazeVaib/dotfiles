import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { DataFactoryManagementClientContext } from "../dataFactoryManagementClientContext";
/** Class representing a RerunTriggers. */
export declare class RerunTriggers {
    private readonly client;
    /**
     * Create a RerunTriggers.
     * @param {DataFactoryManagementClientContext} client Reference to the service client.
     */
    constructor(client: DataFactoryManagementClientContext);
    /**
     * Creates a rerun trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param rerunTriggerName The rerun trigger name.
     * @param rerunTumblingWindowTriggerActionParameters Rerun tumbling window trigger action
     * parameters.
     * @param [options] The optional parameters
     * @returns Promise<Models.RerunTriggersCreateResponse>
     */
    create(resourceGroupName: string, factoryName: string, triggerName: string, rerunTriggerName: string, rerunTumblingWindowTriggerActionParameters: Models.RerunTumblingWindowTriggerActionParameters, options?: msRest.RequestOptionsBase): Promise<Models.RerunTriggersCreateResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param rerunTriggerName The rerun trigger name.
     * @param rerunTumblingWindowTriggerActionParameters Rerun tumbling window trigger action
     * parameters.
     * @param callback The callback
     */
    create(resourceGroupName: string, factoryName: string, triggerName: string, rerunTriggerName: string, rerunTumblingWindowTriggerActionParameters: Models.RerunTumblingWindowTriggerActionParameters, callback: msRest.ServiceCallback<Models.TriggerResource>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param rerunTriggerName The rerun trigger name.
     * @param rerunTumblingWindowTriggerActionParameters Rerun tumbling window trigger action
     * parameters.
     * @param options The optional parameters
     * @param callback The callback
     */
    create(resourceGroupName: string, factoryName: string, triggerName: string, rerunTriggerName: string, rerunTumblingWindowTriggerActionParameters: Models.RerunTumblingWindowTriggerActionParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TriggerResource>): void;
    /**
     * Starts a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param rerunTriggerName The rerun trigger name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    start(resourceGroupName: string, factoryName: string, triggerName: string, rerunTriggerName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Stops a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param rerunTriggerName The rerun trigger name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    stop(resourceGroupName: string, factoryName: string, triggerName: string, rerunTriggerName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Cancels a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param rerunTriggerName The rerun trigger name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    cancel(resourceGroupName: string, factoryName: string, triggerName: string, rerunTriggerName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Lists rerun triggers by an original trigger name.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param [options] The optional parameters
     * @returns Promise<Models.RerunTriggersListByTriggerResponse>
     */
    listByTrigger(resourceGroupName: string, factoryName: string, triggerName: string, options?: msRest.RequestOptionsBase): Promise<Models.RerunTriggersListByTriggerResponse>;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param callback The callback
     */
    listByTrigger(resourceGroupName: string, factoryName: string, triggerName: string, callback: msRest.ServiceCallback<Models.RerunTriggerListResponse>): void;
    /**
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByTrigger(resourceGroupName: string, factoryName: string, triggerName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RerunTriggerListResponse>): void;
    /**
     * Starts a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param rerunTriggerName The rerun trigger name.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginStart(resourceGroupName: string, factoryName: string, triggerName: string, rerunTriggerName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Stops a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param rerunTriggerName The rerun trigger name.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginStop(resourceGroupName: string, factoryName: string, triggerName: string, rerunTriggerName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Cancels a trigger.
     * @param resourceGroupName The resource group name.
     * @param factoryName The factory name.
     * @param triggerName The trigger name.
     * @param rerunTriggerName The rerun trigger name.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCancel(resourceGroupName: string, factoryName: string, triggerName: string, rerunTriggerName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Lists rerun triggers by an original trigger name.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RerunTriggersListByTriggerNextResponse>
     */
    listByTriggerNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RerunTriggersListByTriggerNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByTriggerNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RerunTriggerListResponse>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByTriggerNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RerunTriggerListResponse>): void;
}
//# sourceMappingURL=rerunTriggers.d.ts.map